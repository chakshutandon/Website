stages:
  - build
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  MOUNT_POINT: /builds/$CI_PROJECT_PATH/
  CONTAINER_HUGO_TAG: "v1.0"
  CONTAINER_HUGO_IMAGE: "$CI_REGISTRY_IMAGE/hugo:$CONTAINER_HUGO_TAG"

build:
  stage: build
  image: docker:19.03.8
  services:
    - docker:19.03.8-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CONTAINER_HUGO_IMAGE
    - docker run --rm -v $MOUNT_POINT:/site $CONTAINER_HUGO_IMAGE ./hugo -s /site
  artifacts:
    paths: ['public']
    expire_in: 2 hrs

staging:
  stage: deploy
  environment:
    name: staging
  only:
    - master
  image: node:alpine
  dependencies:
    - build
  script:
    - npm install -g firebase-tools
    - firebase use --token $FIREBASE_DEPLOY_KEY staging
    - firebase deploy -m "Pipeline $CI_PIPELINE_ID, Build $CI_BUILD_ID" --non-interactive --token $FIREBASE_DEPLOY_KEY

prod:
  stage: deploy
  environment:
    name: prod
  when: manual
  only:
    - master
  image: node:alpine
  dependencies:
    - build
  script:
    - npm install -g firebase-tools
    - firebase use --token $FIREBASE_DEPLOY_KEY production
    - firebase deploy -m "Pipeline $CI_PIPELINE_ID, Build $CI_BUILD_ID" --non-interactive --token $FIREBASE_DEPLOY_KEY
